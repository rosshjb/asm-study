Microsoft (R) Macro Assembler Version 14.35.32216.1	    07/27/23 21:21:13
"ArraySum Procedure (_arraysum.asm			     Page 1 - 1


				title ArraySum Procedure (_arraysum.asm)

				include sum.inc
			      C ; Include file for the ArraySum Program (sum.inc)
			      C 
			      C .386
			      C .model flat, stdcall
			      C 
			      C option casemap:none
			      C 
			      C includelib irvine32.lib
			      C 
			      C WriteString proto
			      C WriteInt proto
			      C ReadInt proto
			      C Crlf proto
			      C Clrscr proto
			      C ExitProcess proto, dwExitCode:dword
			      C 
			      C PromptForIntegers proto,
			      C     ptrPrompt:ptr byte,     ; prompt string
			      C     ptrArray:ptr dword,     ; points to the array
			      C     arraySize:dword         ; size of the array
			      C 
			      C ArraySum proto,
			      C     ptrArray:ptr dword,     ; points to the array
			      C     count:dword             ; size of the array
			      C 
			      C DisplaySum PROTO,
			      C     ptrPrompt:ptr byte,     ; prompt string
			      C     theSum:dword            ; sum of the array
			      C 

 00000000			.code
				; ------------------------------------------------------------------------------
 00000000			ArraySum proc stdcall public,
				    ptrArray:ptr dword,     ; pointer to array
					arraySize:dword         ; size of array
				;
				; Calculates the sum of an array of 32-bit integers.
				; Returns: EAX = sum
				; ------------------------------------------------------------------------------
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
 00000003  51			    push ecx                ; don't push EAX
 00000004  56				push esi

 00000005  B8 00000000		    mov eax, 0              ; set the sum to zero
 0000000A  8B 75 08		    mov esi, ptrArray
 0000000D  8B 4D 0C		    mov ecx, arraySize
 00000010  83 F9 00		    cmp ecx, 0              ; array size <= 0?
 00000013  7E 07		    jle L2                  ; yes: quit

 00000015  03 06		L1:	add eax, [esi]          ; add each integer to sum
 00000017  83 C6 04			add esi, 4              ; point to next integer
 0000001A  E2 F9			loop L1                 ; repeat for array size

 0000001C  5E			L2: pop esi
 0000001D  59			    pop ecx                 ; return sum in EAX
				    ret
 0000001E  C9		   *	    leave  
 0000001F  C2 0008	   *	    ret    00008h
 00000022			ArraySum endp

				end
Microsoft (R) Macro Assembler Version 14.35.32216.1	    07/27/23 21:21:13
"ArraySum Procedure (_arraysum.asm			     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000022 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ArraySum . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000022 Public STDCALL
  ptrArray . . . . . . . . . . .	DWord	 bp + 00000008
  arraySize  . . . . . . . . . .	DWord	 bp + 0000000C
  L1 . . . . . . . . . . . . . .	L Near	 00000015 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 0000001C _TEXT	
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisplaySum . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PromptForIntegers  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
