; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32216.1 

	TITLE	c:\users\rosshjb\source\repos\asm-study\chapter13\13-1-3\release\arraysum.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	@__security_check_cookie@4:PROC
PUBLIC	_main
PUBLIC	?ArraySum@@YAHQAHH@Z				; ArraySum
EXTRN	___security_cookie:DWORD
; Function compile flags: /Odtp
; File C:\Users\rosshjb\source\repos\asm-study\chapter13\13-1-3\arraysum.cpp
;	COMDAT ?ArraySum@@YAHQAHH@Z
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_i$1 = -4						; size = 4
_array$ = 8						; size = 4
_count$ = 12						; size = 4
?ArraySum@@YAHQAHH@Z PROC				; ArraySum, COMDAT

; 2    : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 3    :     int sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 4    : 
; 5    :     for (int i = 0; i < count; i++)

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@ArraySum
$LN2@ArraySum:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@ArraySum:
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR _count$[ebp]
	jge	SHORT $LN3@ArraySum

; 6    :         sum += array[i];

	mov	edx, DWORD PTR _i$1[ebp]
	mov	eax, DWORD PTR _array$[ebp]
	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _sum$[ebp], ecx
	jmp	SHORT $LN2@ArraySum
$LN3@ArraySum:

; 7    : 
; 8    :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]

; 9    : }

	mov	esp, ebp
	pop	ebp
	ret	0
?ArraySum@@YAHQAHH@Z ENDP				; ArraySum
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Users\rosshjb\source\repos\asm-study\chapter13\13-1-3\arraysum.cpp
;	COMDAT _main
_TEXT	SEGMENT
_sum$ = -208						; size = 4
_Array$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT

; 12   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 13   :     int Array[50];
; 14   : 
; 15   :     int sum = ArraySum(Array, 50);

	push	50					; 00000032H
	lea	eax, DWORD PTR _Array$[ebp]
	push	eax
	call	?ArraySum@@YAHQAHH@Z			; ArraySum
	add	esp, 8
	mov	DWORD PTR _sum$[ebp], eax

; 16   : }

	xor	eax, eax
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
