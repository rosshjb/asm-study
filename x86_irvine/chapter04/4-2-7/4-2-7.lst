Microsoft (R) Macro Assembler Version 14.35.32216.1	    07/13/23 00:42:38
addsubtest.asm						     Page 1 - 1


				; Addition and Subtraction (addsubtest.asm)

				.386
				.model flat, stdcall
				.stack 4096

				ExitProcess proto, dwExitCode:dword

 00000000			.data
 00000000 00000000		    rval sdword ?
 00000004 0000001A		    xval sdword 26
 00000008 0000001E		    yval sdword 30
 0000000C 00000028		    zval sdword 40

 00000000			.code
 00000000			main proc
				    ; inc and dec
 00000000  66| B8 1000		    mov ax, 1000h
 00000004  66| 40		    inc ax          ; ax = 1001h
 00000006  66| 48		    dec ax          ; ax = 1000h

				    ; expression: rval = -xval + (yval - zval)
 00000008  A1 00000004 R	    mov eax, xval
 0000000D  F7 D8		    neg eax         ; -26
 0000000F  8B 1D 00000008 R	    mov ebx, yval
 00000015  2B 1D 0000000C R	    sub ebx, zval   ; -10
 0000001B  03 C3		    add eax, ebx
 0000001D  A3 00000000 R	    mov rval, eax   ; -36

				    ; zero flag example:
 00000022  66| B9 0001		    mov cx, 1
 00000026  66| 83 E9 01		    sub cx, 1       ; zf = 1
 0000002A  66| B8 FFFF		    mov ax, 0ffffh
 0000002E  66| 40		    inc ax          ; zf = 1

				    ; sign flag example:
 00000030  66| B9 0000		    mov cx, 0
 00000034  66| 83 E9 01		    sub cx, 1       ; sf = 1
 00000038  66| B8 7FFF		    mov ax, 7fffh
 0000003C  66| 83 C0 02		    add ax, 2       ; sf = 1

				    ; carry flag example
 00000040  B0 FF		    mov al, 0ffh
 00000042  04 01		    add al, 1       ; cf = 1, al = 00h

				    ; overflow flag example
 00000044  B0 7F		    mov al, +127
 00000046  04 01		    add al, 1       ; of = 1
 00000048  B0 80		    mov al, -128
 0000004A  2C 01		    sub al, 1

				    invoke ExitProcess, 0
 0000004C  6A 00	   *	    push   +000000000h
 0000004E  E8 00000000 E   *	    call   ExitProcess
 00000053			main endp
				end main
Microsoft (R) Macro Assembler Version 14.35.32216.1	    07/13/23 00:42:38
addsubtest.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000010 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000053 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000053 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
rval . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
xval . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
yval . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
zval . . . . . . . . . . . . . .	DWord	 0000000C _DATA	

	   0 Warnings
	   0 Errors
