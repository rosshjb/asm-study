Microsoft (R) Macro Assembler (x64) Version 14.35.32216.1   07/15/23 00:11:35
4-6-3.asm						     Page 1 - 1


				; 4-6-3.asm

				ExitProcess proto

 00000000			.data
 00000000 10 20 30		    bArray byte  10h, 20h, 30h
 00000003 1000 2000 3000	    wArray word  1000h, 2000h, 3000h
 00000009			    qArray qword 100000000h, 200000000h, 300000000h
	   0000000100000000
	   0000000200000000
	   0000000300000000

 00000021			    array qword 1, 2, 3, 4
	   0000000000000001
	   0000000000000002
	   0000000000000003
	   0000000000000004
				    
 00000041 10 20 30 40		    arrayB byte 10h, 20h, 30h, 40h
 00000045			    ptrB1   qword arrayB
	   0000000000000041 R
 0000004D			    ptrB2   qword offset arrayB
	   0000000000000041 R
 00000000			.code
 00000000			main proc
 00000000  48/ B8		    mov rax, 0FFFFFFFFh ; fill the lower 32 bits
	   00000000FFFFFFFF
 0000000A  48/ 83 C0 01		    add rax, 1          ; rax = 100000000h

 0000000E  48/ C7 C0		    mov rax, 0FFFFh     ; rax = 000000000000FFFFh
	   0000FFFF
 00000015  66| BB 0001		    mov bx, 1
 00000019  66| 03 C3		    add ax, bx          ; rax = 0000000000000000h

 0000001C  48/ C7 C0		    mov rax, 0FFh       ; rax = 00000000000000FFh
	   000000FF
 00000023  B3 01		    mov bl, 1
 00000025  02 C3		    add al, bl          ; rax = 0000000000000000h

 00000027  48/ C7 C0		    mov rax, 0          ; rax = 0000000000000000h
	   00000000
 0000002E  BB 00000001		    mov ebx, 1
 00000033  2B C3		    sub eax, ebx        ; rax = 00000000FFFFFFFFh

 00000035  48/ C7 C0		    mov rax, 0          ; rax = 0000000000000000h
	   00000000
 0000003C  66| BB 0001		    mov bx, 1
 00000040  66| 2B C3		    sub ax, bx          ; rax = 000000000000FFFFh

 00000043  48/ BF		    mov rdi, offset bArray
	   0000000000000000 R
 0000004D  FE 0F		    dec byte ptr [rdi]      ; 8-bit target

 0000004F  48/ BB		    mov rbx, offset wArray
	   0000000000000003 R
 00000059  66| FF 03		    inc word ptr [rbx]      ; 16-bit target

 0000005C  48/ BE		    mov rsi, offset qArray
	   0000000000000009 R
 00000066  48/ FF 06		    inc qword ptr [rsi]     ; 64-bit target

				    ; In 64-bit mode, displacement on a memory operand is 32-bits (it gets sign extended to 64-bit):
				    ; https://stackoverflow.com/q/36667825/9304999
 00000069  BE 00000003		    mov esi, 3              ; subscript
 0000006E  48/ 8D 3D		    lea rdi, offset array
	   00000021 R
 00000075  48/ 8B 04 F7		    mov rax, [rdi + rsi * 8] ; rax = 4

 00000079  48/ 8B 35		    mov rsi, ptrB1
	   00000045 R
 00000080  48/ 8B 35		    mov rsi, ptrB2
	   0000004D R

 00000087  B9 00000000		    mov ecx, 0
 0000008C  E8 00000000 E	    call ExitProcess
 00000091			main endp
				end
Microsoft (R) Macro Assembler (x64) Version 14.35.32216.1   07/15/23 00:11:35
4-6-3.asm						     Symbols 2 - 1




Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P 	 00000000 Length= 00000000 External
main . . . . . . . . . . . . . .	P 	 00000000 _TEXT	Length= 00000091 Public


Symbols:

                N a m e                 Type     Value    Attr

arrayB . . . . . . . . . . . . .	Byte	 00000041 _DATA	
array  . . . . . . . . . . . . .	QWord	 00000021 _DATA	
bArray . . . . . . . . . . . . .	Byte	 00000000 _DATA	
ptrB1  . . . . . . . . . . . . .	QWord	 00000045 _DATA	
ptrB2  . . . . . . . . . . . . .	QWord	 0000004D _DATA	
qArray . . . . . . . . . . . . .	QWord	 00000009 _DATA	
wArray . . . . . . . . . . . . .	Word	 00000003 _DATA	

	   0 Warnings
	   0 Errors
